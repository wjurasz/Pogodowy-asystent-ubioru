@page "/Account/Manage/TwoFactorAuthentication"

@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Identity
@using AsystentPogodowy.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<PageTitle>Uwierzytelnianie dwuskładnikowe (2FA)</PageTitle>

<StatusMessage />
<h3>Uwierzytelnianie dwuskładnikowe (2FA)</h3>

@if (canTrack)
{
    if (is2faEnabled)
    {
        if (recoveryCodesLeft == 0)
        {
            <div class="alert alert-danger">
                <strong>Nie masz żadnych kodów odzyskiwania.</strong>
                <p>Musisz <a href="Account/Manage/GenerateRecoveryCodes">wygenerować nowy zestaw kodów</a>, aby móc się zalogować za pomocą kodu odzyskiwania.</p>
            </div>
        }
        else if (recoveryCodesLeft == 1)
        {
            <div class="alert alert-danger">
                <strong>Został Ci 1 kod odzyskiwania.</strong>
                <p>Możesz <a href="Account/Manage/GenerateRecoveryCodes">wygenerować nowy zestaw kodów</a>.</p>
            </div>
        }
        else if (recoveryCodesLeft <= 3)
        {
            <div class="alert alert-warning">
                <strong>Zostały Ci @recoveryCodesLeft kody odzyskiwania.</strong>
                <p>Zaleca się <a href="Account/Manage/GenerateRecoveryCodes">wygenerowanie nowego zestawu kodów</a>.</p>
            </div>
        }

        if (isMachineRemembered)
        {
            <form style="display: inline-block" @formname="forget-browser" @onsubmit="OnSubmitForgetBrowserAsync" method="post">
                <AntiforgeryToken />
                <button type="submit" class="btn btn-primary">Zapomnij tę przeglądarkę</button>
            </form>
        }

        <a href="Account/Manage/Disable2fa" class="btn btn-primary">Wyłącz 2FA</a>
        <a href="Account/Manage/GenerateRecoveryCodes" class="btn btn-primary">Zresetuj kody odzyskiwania</a>
    }

    <h4>Aplikacja uwierzytelniająca</h4>
    @if (!hasAuthenticator)
    {
        <a href="Account/Manage/EnableAuthenticator" class="btn btn-primary">Dodaj aplikację uwierzytelniającą</a>
    }
    else
    {
        <a href="Account/Manage/EnableAuthenticator" class="btn btn-primary">Skonfiguruj aplikację</a>
        <a href="Account/Manage/ResetAuthenticator" class="btn btn-primary">Zresetuj aplikację</a>
    }
}
else
{
    <div class="alert alert-danger">
        <strong>Nie zaakceptowano polityki prywatności i plików cookies.</strong>
        <p>Musisz zaakceptować politykę, zanim będzie można włączyć uwierzytelnianie dwuskładnikowe.</p>
    </div>
}

@code {
    private bool canTrack;
    private bool hasAuthenticator;
    private int recoveryCodesLeft;
    private bool is2faEnabled;
    private bool isMachineRemembered;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        canTrack = HttpContext.Features.Get<ITrackingConsentFeature>()?.CanTrack ?? true;
        hasAuthenticator = await UserManager.GetAuthenticatorKeyAsync(user) is not null;
        is2faEnabled = await UserManager.GetTwoFactorEnabledAsync(user);
        isMachineRemembered = await SignInManager.IsTwoFactorClientRememberedAsync(user);
        recoveryCodesLeft = await UserManager.CountRecoveryCodesAsync(user);
    }

    private async Task OnSubmitForgetBrowserAsync()
    {
        await SignInManager.ForgetTwoFactorClientAsync();

        RedirectManager.RedirectToCurrentPageWithStatus(
            "Ta przeglądarka została zapomniana. Podczas następnego logowania zostaniesz poproszony o kod 2FA.",
            HttpContext);
    }
}
